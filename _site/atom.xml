<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Nathan Owsiany</title>
 <link href="http://nathan.owsiany.me/atom.xml" rel="self"/>
 <link href="http://nathan.owsiany.me/"/>
 <updated>2014-07-04T00:17:14-07:00</updated>
 <id>http://nathan.owsiany.me</id>
 <author>
   <name>Nathan Owsiany</name>
   <email></email>
 </author>

 
 <entry>
   <title>Jekyll Tutorial</title>
   <link href="http://nathan.owsiany.me/2014/07/03/jekyll-tutorial/"/>
   <updated>2014-07-03T00:00:00-07:00</updated>
   <id>http://nathan.owsiany.me/2014/07/03/jekyll-tutorial</id>
   <content type="html">&lt;p&gt;As I mentioned in my last post, this blog is based on the Jekyll framework and hosted on GitHub Pages. As I was going through the process of choosing a platform I came across Jekyll and was intrigued by the concept of hosting directly on GitHub, which, as someone trying to immerse myself in the development ecosystem, is intimidating, but seemed like a great opportunity to force myself to get aquainted with GitHub. Still, functionality is obviously number one, and beyond being a platform I&amp;#39;m purely interested in, Jekyll is known to be fast and flexible. Oh yeah, and it&amp;#39;s free! &lt;/p&gt;

&lt;p&gt;This tutorial covers step by step how to setup and publish a very simple Jekyll blog and publish it to GitHub Pages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#audience&quot;&gt;&lt;strong&gt;Audience&lt;/strong&gt;&lt;/a&gt;: Who this tutorial is written for&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#goal&quot;&gt;&lt;strong&gt;Goal&lt;/strong&gt;&lt;/a&gt;: What will be accomplished in this tutorial&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#setup&quot;&gt;&lt;strong&gt;Setup&lt;/strong&gt;&lt;/a&gt;: Setting up the necessary development environment to install and run Jekyll&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#jekyllhyde&quot;&gt;&lt;strong&gt;Jekyll/Hyde&lt;/strong&gt;&lt;/a&gt;: Getting up and running using Jekyll and getting started with the Hyde theme&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#githubpages&quot;&gt;&lt;strong&gt;GitHub Pages&lt;/strong&gt;&lt;/a&gt;: Loading your page to GitHub Pages&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#customdomain&quot;&gt;&lt;strong&gt;Custom Domain&lt;/strong&gt;&lt;/a&gt;: Linking your newly created site to your personal domain&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#nextsteps&quot;&gt;&lt;strong&gt;Next Steps&lt;/strong&gt;&lt;/a&gt;: You&amp;#39;ve got a generic text online, now what?&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2&gt;&lt;a name=&quot;audience&quot;&gt;&lt;/a&gt;Audience&lt;/h2&gt;

&lt;p&gt;I&amp;#39;ll preface this post by saying that I&amp;#39;m a total amateur, and therefore not really the standard Jekyll user. This means that there may be elements I won&amp;#39;t (read: can&amp;#39;t) fully explain. If you&amp;#39;re starting at a higher level, everything should still work, but may not have the meaty context you desire (mmm... meaty context...). &lt;/p&gt;

&lt;p&gt;That said, I&amp;#39;m writing this because this is what I wished I could find as I was going through this process. It also starts from scratch, literally. I recently updated to new computer so I was starting from nothing. This isn&amp;#39;t likely to be the case for most of you, meaning you can skip some of the initial setup, but if you&amp;#39;re brand new this is the tutorial for you. &lt;/p&gt;

&lt;p&gt;The other plus if you&amp;#39;re a beginner is that I&amp;#39;m going to explain things in a way that I, another beginner, understand them. One of the problems that I ran in to going through this process was the really quick dropoff in a lot of the instructions I found along the way. They start you off wading through the shallow end of the pool and about half way across you quickly realize it&amp;#39;s not a steady decline as you fall off the 10 foot ledge directly in to the deep end. No lifeguards, nothing, and you&amp;#39;re just left floating there in your waterwings... not here. (yeah, I know, this also means it&amp;#39;s possible I&amp;#39;m giving you bad information... the process worked for me, take it or leave it)&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;&lt;a name=&quot;goal&quot;&gt;&lt;/a&gt;Goal&lt;/h2&gt;

&lt;p&gt;This tutorial will walk you step by step through setting up the development environment to install &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;, creating a Jekyll blog using the &lt;a href=&quot;http://hyde.getpoole.com/&quot;&gt;Hyde&lt;/a&gt;, hosting your site on &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;, and adding a domain alias so that you can link your GitHub Pages site to your own domain. &lt;/p&gt;

&lt;p&gt;This tutorial will not cover customizing the site or creating/managing posts, but if you want to go further, stay tuned, that&amp;#39;s coming up next. You&amp;#39;ll learn alongside me. &lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;&lt;a name=&quot;setup&quot;&gt;&lt;/a&gt;Setup&lt;/h2&gt;

&lt;p&gt;Before we can start using Jekyll we need to install the correct components of our development environment. Remember, I&amp;#39;m starting from scratch, so you may be able to skip most of this if you&amp;#39;ve done any sort of Ruby development in the past. I&amp;#39;ll also note that it&amp;#39;s possible not every step in this is necessary, I ran in to errors as I was trying to get Jekyll installed and these are the components that I needed to install before it worked. You can try installing Jekyll right away by typing the following command at the terminal prompt:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo gem install jekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;NOTE: This entire setup process was performed on a Mac running OSX 10.9, though everything should still work correctly on earlier versions of Macs. If you&amp;#39;re running linux the same process I outline below should work for you. If you&amp;#39;re on Windows, you&amp;#39;ve got an uphill battle as Jekyll doesn&amp;#39;t officially support Windows, but tutorials exist, like &lt;a href=&quot;https://github.com/juthilo/run-jekyll-on-windows&quot;&gt;this one&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you got errors when you tried the install, follow along.&lt;/p&gt;

&lt;h4&gt;1. Install Xcode&lt;/h4&gt;

&lt;p&gt;If you don&amp;#39;t have it installed already, go the App Store and &lt;strong&gt;install Xcode&lt;/strong&gt;. (Xcode is an integrate development environment that contains a suite of software development tools developed by Apple for developing software for OS X and iOS)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;After you&amp;#39;ve downloaded and installed Xcode, you need to accept the Xcode license terms. Go to Spotlight and search for and open Terminal.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;At the terminal prompt run the following:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo xcodebuild -license
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Press &amp;#39;q&amp;#39; then type &amp;#39;agree&amp;#39; to accept the license agreement &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;2. Install Homebrew&lt;/h4&gt;

&lt;p&gt;Sold as &amp;#39;the missing package manager for OS X&amp;#39;, &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; makes it easy to install frequently used packages that Apple doesn&amp;#39;t include in OS X. &lt;/p&gt;

&lt;p&gt;To install Homebrew, paste the following at a Terminal prompt:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ruby -e &amp;quot;$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;3. Install GCC&lt;/h4&gt;

&lt;p&gt;This is a piece that I ran across on StackOverflow while troubleshooting an error, I&amp;#39;m not 100% if this was necessary for the Jekyll install, but is one of the things that I installed along the way. GCC stands for the GNU Compiler Collection and is a part of the standard GNU toolchain. Here&amp;#39;s the install process I followed for the GCC install:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;brew update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;brew tap homebrew/dupes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;brew install apple-gcc42
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make sure you don&amp;#39;t receive any error when running:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;which gcc-4.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;4. Install MacPorts&lt;/h4&gt;

&lt;p&gt;Go &lt;a href=&quot;https://www.macports.org/install.php&quot;&gt;here&lt;/a&gt; and click on your version of OS X (we&amp;#39;ve already installed Xcode and accepted the license agreement).&lt;/p&gt;

&lt;h4&gt;5. Install Ruby Version Manager [RVM]&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://rvm.io/&quot;&gt;Ruby Version Manager [RVM]&lt;/a&gt; allows you to easily install, manage, and work with multiple Ruby environments. While we&amp;#39;ll only be using the latest stable version of Ruby right now, the pay come in handy if you continue usine Ruby for different projects going forward. So first install RVM by pasting the following in to Terminal:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;\curl -sSL https://get.rvm.io | bash -s stable
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once this has completed restart your Terminal.&lt;/p&gt;

&lt;h4&gt;5. Install Ruby 2.1.2&lt;/h4&gt;

&lt;p&gt;If you&amp;#39;re running on a UNIX system (Mac/Linux), and I&amp;#39;ll assume you are since it would make no sense for you to be at this point in the tutorial if you were running Windows, Ruby comes pre-installed with your OS. You can see this by typing &lt;code&gt;ruby -v&lt;/code&gt; at a Terminal prompt. If you&amp;#39;re not already using the 2.1.2, let&amp;#39;s install this latest stable version to RVM. At your Terminal prompt run:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;rvm requirements
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;rvm install 2.1.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, let&amp;#39;s set this version of Ruby to be the default ruby when you open a new terminal shell, we&amp;#39;ll use the &lt;code&gt;--default&lt;/code&gt; tag:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;rvm --default use 2.1.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To verify that this worked you can check the current Ruby version again by typing:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ruby -v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that&amp;#39;s it, we&amp;#39;re all setup! We should be ready to install Jekyll and get started on actually getting our site ready to go. Continue on to the next section where we&amp;#39;ll walk through installing Jekyll, getting our page template downloaded and setup, and at the end see our page running in a browser (locally).&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;&lt;a name=&quot;jekyllpoole&quot;&gt;&lt;/a&gt;Jekyll / Hyde&lt;/h2&gt;

&lt;p&gt;Assuming you&amp;#39;ve completed the setup above, you&amp;#39;re ready to get started with Jekyll itself, and it should be really easy!&lt;/p&gt;

&lt;h4&gt;1.Install Jekyll&lt;/h4&gt;

&lt;p&gt;To install Jekyll we&amp;#39;re going to use RubyGems which is software (it comes packaged with all Ruby versions &amp;gt; 1.9) that allows you to easily download, install, and use ruby software packages, one of which is Jekyll. To install open a terminal window and run:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo gem install jekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The install will take a few mins, and when it&amp;#39;s done you should see something similar to the following:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Done installing documentation for blankslate, celluloid, classifier, coffee-script, coffee-script-source, colorator, execjs, fast-stemmer, ffi, hitimes, jekyll, jekyll-coffeescript, jekyll-gist, jekyll-paginate, jekyll-sass-converter, jekyll-watch, kramdown, liquid, listen, mercenary, parslet, posix-spawn, pygments.rb, rb-fsevent, rb-inotify, redcarpet, safe_yaml, sass, timers, toml, yajl-ruby after 24 seconds
31 gems installed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You&amp;#39;ll see that in additional to the &lt;code&gt;jekyll&lt;/code&gt; gem itself, it also installed, in my case, 30 additional dependent gems that Jekyll uses. &lt;/p&gt;

&lt;p&gt;We&amp;#39;re going to hold off on testing out Jekyll on anything right now and move on to getting our template set up so we&amp;#39;ve got something to display when we fire it up. &lt;/p&gt;

&lt;h4&gt;2. Download Poole &amp;gt; Hyde Theme&lt;/h4&gt;

&lt;p&gt;For this site I chose to use a Jekyll theme called &lt;a href=&quot;http://hyde.getpoole.com/&quot;&gt;Hyde&lt;/a&gt; which is based on an underlying theme, &lt;a href=&quot;http://getpoole.com/&quot;&gt;Poole&lt;/a&gt;. While a theme isn&amp;#39;t completely necessary and we could create our own templates, we&amp;#39;re going to use this as a foundation to build off of (a little instant gratification...). &lt;/p&gt;

&lt;p&gt;Go to the &lt;a href=&quot;http://hyde.getpoole.com&quot;&gt;Hyde Website&lt;/a&gt; and on the left sidebar click on Download. Unzip this file and move it to a new directory where you want to house this site (the live site will live on GitHub, but this is where you&amp;#39;ll edit it from). For now I recommend moving it in to your Documents folder as this is where the rest of the tutorial will work from. Rename this directory as you&amp;#39;d like (for the purposes of this tutorial I&amp;#39;ll call the directory &lt;code&gt;hyde-blog&lt;/code&gt;). &lt;/p&gt;

&lt;h4&gt;3. It lives!&lt;/h4&gt;

&lt;p&gt;Alright, we&amp;#39;ve got a site. Let&amp;#39;s fire up Jekyll and take a look at in the browser. Right now this will just be an exact replica of what&amp;#39;s on the Hyde website, but it&amp;#39;s a start. Open up a Terminal window and navigate to the project directory. &lt;/p&gt;

&lt;p&gt;I&amp;#39;m assuming most people will be to navigate to the project directory, but just to be thorough, type &lt;code&gt;pwd&lt;/code&gt; to see your current location. Type &lt;code&gt;ls&lt;/code&gt; to list the files in the current directory, to navigate to the Documents directory type &lt;code&gt;cd Documents&lt;/code&gt;, then if you&amp;#39;re using the naming I used above type &lt;code&gt;cd hyde-blog&lt;/code&gt; (or whatever you named your project directory).&lt;/p&gt;

&lt;p&gt;Once you&amp;#39;re in the project directory we&amp;#39;ll start up Jekyll&amp;#39;s built in development server so we can view the site locally. Start the server by running:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With this we&amp;#39;ve got a live version of the site running locally. &lt;/p&gt;

&lt;h4&gt;4. Check out the site&lt;/h4&gt;

&lt;p&gt;To access the site, open a new browser window and navigate to &lt;code&gt;localhost:4000&lt;/code&gt;. And there&amp;#39;s the site! After you&amp;#39;ve looked around, let&amp;#39;s stop the server for now. go back to the Terminal window where you started the server and press &lt;code&gt;CTRL+C&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;5. Minor edits&lt;/h4&gt;

&lt;p&gt;That&amp;#39;s cool and all, but let&amp;#39;s make a couple of quick edits just so it&amp;#39;s clear that this is our site and not just the stock template. In Finder, navigate to your project folder and open &lt;code&gt;_config.yml&lt;/code&gt; in your favorite text editor (I&amp;#39;m using &lt;a href=&quot;http://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt;).   It looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# Dependencies
markdown:         redcarpet
pygments:         true

# Permalinks
permalink:        pretty

# Setup
title:            Hyde
tagline:          &amp;#39;A Jekyll theme&amp;#39;
description:      &amp;#39;A brazen two-column &amp;lt;a href=&amp;quot;http://jekyllrb.com&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;Jekyll&amp;lt;/a&amp;gt; theme that pairs a prominent sidebar with uncomplicated content. Made by &amp;lt;a href=&amp;quot;https://twitter.com/mdo&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;@mdo&amp;lt;/a&amp;gt;.&amp;#39;
url:              http://hyde.getpoole.com

author:
  name:           &amp;#39;Mark Otto&amp;#39;
  url:            https://twitter.com/mdo

paginate:         5

# Custom vars
version:          2.0.0

github:
  repo:           https://github.com/poole/hyde
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For the sake of this test run,  let&amp;#39;s update the &lt;code&gt;#setup&lt;/code&gt; section (update all sections except for url). After you&amp;#39;ve updated save the file and close out. Go back to your Terminal window and restart the dev server:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In your browser window refresh the &lt;code&gt;localhost:4000&lt;/code&gt; page. It&amp;#39;s nothing big... but it&amp;#39;s something! But what good is a local-only website? Next we&amp;#39;ll get this site up and running on GitHub pages.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;&lt;a name=&quot;githubpages&quot;&gt;&lt;/a&gt;GitHub Pages&lt;/h2&gt;

&lt;p&gt;Now we&amp;#39;ve got a local site (OK, we&amp;#39;ve downloaded a template...), so let&amp;#39;s get this online so we can share this out to the world. I mean, what if the main Hyde site goes down! To do this we&amp;#39;re going to use GitHub Pages. GitHub Pages are public webpages freely hosted and easily published through the GitHub site. &lt;/p&gt;

&lt;h4&gt;1. Create GitHub Account&lt;/h4&gt;

&lt;p&gt;The first thing you&amp;#39;ll need to do, if you don&amp;#39;t have one already, is to create a GitHub account by going to the &lt;a href=&quot;https://github.com/&quot;&gt;GitHub Website&lt;/a&gt;. While the last part of this tutorial will walk through the process of assigning a custom domain name to the page, but if you don&amp;#39;t have or don&amp;#39;t plan on using a personal domain name pay attention to the GitHub username that you select because your website URL will be &lt;code&gt;username.github.io&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;2. Set up Git&lt;/h4&gt;

&lt;p&gt;a. &lt;a href=&quot;http://git-scm.com/downloads&quot;&gt;Download and install the latest version of Git&lt;/a&gt;.
b. Open Terminal and tell Git your &lt;em&gt;name&lt;/em&gt; so that your commits will be properly labeled by typing:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git config --global user.name &amp;quot;YOUR NAME&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;c. Next tell Git the &lt;em&gt;email address&lt;/em&gt; that should be associated with your Git commits. This email needs to be the same one that you used to setup your GitHub account.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git config --global user.email &amp;quot;YOUR EMAIL ADDRESS&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;3. Authenticating to GitHub from Git&lt;/h4&gt;

&lt;p&gt;When you commit to or clone a GitHub repository from Git, you&amp;#39;ll need to authenticate to GitHub using either HTTPS or SSH. GitHub recommends using SSH so that&amp;#39;s what will be used for this tutorial. &lt;/p&gt;

&lt;p&gt;Follow the process outlined on the GitHub website to &lt;a href=&quot;https://help.github.com/articles/generating-ssh-keys&quot;&gt;generate the necessary SSH keys&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;SSH keys are a way to identify trusted computers, without involving passwords. The steps on the GitHub site will walk you through generating an SSH key and then adding the public key to your GitHub account. &lt;/p&gt;

&lt;h4&gt;4. Create a New GitHub Repository&lt;/h4&gt;

&lt;p&gt;Now that your account is all set up, we need to create the Repository (this is the GitHub project directory) that we will load this site to. &lt;/p&gt;

&lt;p&gt;a. Log in to your GitHub account
b. On the home page, in the bottom right portion of the screen in the &amp;#39;Your Repositories&amp;#39; section click on &lt;code&gt;+ New repository&lt;/code&gt;
c. Enter your &lt;code&gt;Repository name&lt;/code&gt;. IMPORTANT: This needs to be &lt;code&gt;username.github.io&lt;/code&gt; (replacing &amp;#39;username&amp;#39; with your GitHub account user name). The site will not work if this repository is not named correctly. 
d. Enter a brief site &lt;code&gt;Description&lt;/code&gt;
e. Leave this as a &lt;code&gt;Public&lt;/code&gt; repository
f. Don&amp;#39;t select to initialize a README file
g. Click &lt;code&gt;Create repository&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We&amp;#39;re getting close. You&amp;#39;ve now setup the landing zone for your future site.&lt;/p&gt;

&lt;h4&gt;5. .gitignore&lt;/h4&gt;

&lt;p&gt;One of the directories that Jekyll generates when serving up the site locally is a _site directory. This file contains all of the necessary static files to view the site. For the purposes of our GitHub Page we don&amp;#39;t actually want to upload this, so we&amp;#39;re going to create a .gitignore file in our directory which will tell Git to ignore the files listed in it.&lt;/p&gt;

&lt;h1&gt;Need&lt;/h1&gt;

&lt;h1&gt;to&lt;/h1&gt;

&lt;h1&gt;add&lt;/h1&gt;

&lt;h1&gt;this&lt;/h1&gt;

&lt;h1&gt;still.&lt;/h1&gt;

&lt;h4&gt;6. Initialize your New Repository&lt;/h4&gt;

&lt;p&gt;It&amp;#39;s time to load our files to this new repository. Open up a Terminal window and navigate to your project folder. Once you&amp;#39;re in this directory we first need to clone this blank repository we just created (we&amp;#39;re basically referencing this GitHub location on our local computer). To do this run:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git clone https://github.com/username/username.github.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next we&amp;#39;re going to tell Git that the directory we&amp;#39;re in should be tracked by Git. Do this with:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that Git knows what this location is, we need to add all of our files in to the Git management system by using: &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git add -A
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will add all the files in our directory to Git except those listed in our .gitignore file. Now that we&amp;#39;ve added the files we&amp;#39;re going to &lt;em&gt;commit&lt;/em&gt; these files to the main project. Run:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git commit -m &amp;quot;initial commit&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The portion in quotes explains what was changed in this commit. In this case, we&amp;#39;re using the description &amp;#39;initial commit&amp;#39; as this is the initial file load. So we&amp;#39;ve saved our changes, but this is just on your local computer, the last step is to &lt;em&gt;push&lt;/em&gt; these changes up to GitHub. We do this using:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With that your files have been uploaded to GitHub and we&amp;#39;ve got a site up and running. &lt;/p&gt;

&lt;h4&gt;7. Check Out your New Site&lt;/h4&gt;

&lt;p&gt;Open a browser and navigate to your newly created site at &lt;code&gt;username.github.io&lt;/code&gt;. Cool right?&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;&lt;a name=&quot;customdomain&quot;&gt;&lt;/a&gt;Custom Domain&lt;/h2&gt;

&lt;hr&gt;

&lt;h2&gt;&lt;a name=&quot;nextsteps&quot;&gt;&lt;/a&gt;Next Steps&lt;/h2&gt;

&lt;hr&gt;
</content>
 </entry>
 
 <entry>
   <title>Introducing Hyde</title>
   <link href="http://nathan.owsiany.me/2013/12/28/introducing-hyde/"/>
   <updated>2013-12-28T00:00:00-08:00</updated>
   <id>http://nathan.owsiany.me/2013/12/28/introducing-hyde</id>
   <content type="html">&lt;p&gt;Hyde is a brazen two-column &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; theme that pairs a prominent sidebar with uncomplicated content. It&amp;#39;s based on &lt;a href=&quot;http://getpoole.com&quot;&gt;Poole&lt;/a&gt;, the Jekyll butler.&lt;/p&gt;

&lt;h3&gt;Built on Poole&lt;/h3&gt;

&lt;p&gt;Poole is the Jekyll Butler, serving as an upstanding and effective foundation for Jekyll themes by &lt;a href=&quot;https://twitter.com/mdo&quot;&gt;@mdo&lt;/a&gt;. Poole, and every theme built on it (like Hyde here) includes the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Complete Jekyll setup included (layouts, config, &lt;a href=&quot;/404&quot;&gt;404&lt;/a&gt;, &lt;a href=&quot;/atom.xml&quot;&gt;RSS feed&lt;/a&gt;, posts, and &lt;a href=&quot;/about&quot;&gt;example page&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Mobile friendly design and development&lt;/li&gt;
&lt;li&gt;Easily scalable text and component sizing with &lt;code&gt;rem&lt;/code&gt; units in the CSS&lt;/li&gt;
&lt;li&gt;Support for a wide gamut of HTML elements&lt;/li&gt;
&lt;li&gt;Related posts (time-based, because Jekyll) below each post&lt;/li&gt;
&lt;li&gt;Syntax highlighting, courtesy Pygments (the Python-based code snippet highlighter)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Hyde features&lt;/h3&gt;

&lt;p&gt;In addition to the features of Poole, Lanyon adds the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sidebar includes support for textual modules and a dynamically generated navigation with active link support&lt;/li&gt;
&lt;li&gt;Two orientations for content and sidebar, default (left sidebar) and &lt;a href=&quot;https://github.com/poole/lanyon#reverse-layout&quot;&gt;reverse&lt;/a&gt; (right sidebar), available via &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; classes&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/poole/hyde#themes&quot;&gt;Eight optional color schemes&lt;/a&gt;, available via &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; classes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/poole/hyde#readme&quot;&gt;Head to the readme&lt;/a&gt; to learn more.&lt;/p&gt;

&lt;h3&gt;Browser support&lt;/h3&gt;

&lt;p&gt;Hyde is by preference a forward-thinking project. In addition to the latest versions of Chrome, Safari (mobile and desktop), and Firefox, it is only compatible with Internet Explorer 9 and above.&lt;/p&gt;

&lt;h3&gt;Download&lt;/h3&gt;

&lt;p&gt;Hyde is developed on and hosted with GitHub. Head to the &lt;a href=&quot;https://github.com/poole/hyde&quot;&gt;GitHub repository&lt;/a&gt; for downloads, bug reports, and features requests.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://nathan.owsiany.me/2012/02/07/example-content/"/>
   <updated>2012-02-07T00:00:00-08:00</updated>
   <id>http://nathan.owsiany.me/2012/02/07/example-content</id>
   <content type="html">&lt;p&gt;This blog post shows a few different types of content that&amp;#39;s supported and styled with Hyde. Basic typography, images, and code are all supported.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Curabitur blandit tempus porttitor. &lt;strong&gt;Nullam quis risus eget urna mollis&lt;/strong&gt; ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;em&gt;sem malesuada magna&lt;/em&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3&gt;Sub-heading&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;return a + b&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3&gt;Sub-heading&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
&lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
&lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
&lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
&lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/mdo/hyde/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>What's Jekyll?</title>
   <link href="http://nathan.owsiany.me/2012/02/06/whats-jekyll/"/>
   <updated>2012-02-06T00:00:00-08:00</updated>
   <id>http://nathan.owsiany.me/2012/02/06/whats-jekyll</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; is a static site generator, an open-source tool for creating simple yet powerful websites of all shapes and sizes. From &lt;a href=&quot;https://github.com/mojombo/jekyll/blob/master/README.markdown&quot;&gt;the project&amp;#39;s readme&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Jekyll is a simple, blog aware, static site generator. It takes a template directory [...] and spits out a complete, static website suitable for serving with Apache or your favorite web server. This is also the engine behind GitHub Pages, which you can use to host your project’s page or blog right here from GitHub.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It&amp;#39;s an immensely useful tool and one we encourage you to use here with Hyde.&lt;/p&gt;

&lt;p&gt;Find out more by &lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;visiting the project on GitHub&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 

</feed>
